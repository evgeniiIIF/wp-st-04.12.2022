______________________________________________________________Git and GitHub_________________________________________________________________________
Установка Git
sudo apt-get install git
-------------
Версия Git
git --version
-------------
Все команды
git --help
-------------

_______________________________________________________Первоначальная настройка__________________________________________________________

Для начала работы с Git, необходимо указать имя и e-mail пользователя, 
которые будут использоваться для синхронизации локального репозитория с репозиторием на GitHub:

$ git config --global user.name "username"
$ git config --global user.email "username.user@example.com"

Посмотреть настройки Git можно таким образом:
$ git config --list
-------------------

______________________________________________________________Работа с Git _________________________________________________________________________

Проинициализировать папку
git init  
В текущем каталоге создаётся папка .git, в которой содержатся служебные файлы, необходимые для Git. Посмотреть скрытые файлы ls -a
-------------
Текущий статус репозитория
git status
Сообщает в какой ветке находимся  (ветка master создаётся сама и используется по умолчанию) 
и есть ли какие либо изменения в локальном репозитории
-------------
git diff - показывает, какие изменения были внесены с момента последнего (git add)
git checkout -- src/test.html - отменить последние изменения конкретного файла с момента последнего (git add)
git checkout . - отменить последние изменения всех файлов с момента последнего (git add)
-------------
git add "fileName" - следить за конкретным файлом
git add . - следить за всеми файлами

git rm --cached "fileName" - перестать следить за файлом
git rm --cached * - перестать следить за всеми файлами
или
git restore --staged <файл>…», - перестать следить за файлом
-------------
git commit -m "first commit"

После того, как все нужные файлы были добавлены в staging, можно закоммитить изменения. 
Staging — это совокупность файлов, которые будут добавлены в следующий коммит.
флаг «-m». Он позволяет указать сообщение для этого коммита.
-------------
git log -p origin/master -можно посмотреть что отправляем на GitHub
git log --oneline --graph --decorate --all - все коммиты
________________________________________________________________________________________________________________
Файл .gitignore
Создать файл и указать, какие файлы или каталоги нужно игнорировать

"fileName".txt - игнорировать конкретный файл
*.txt          - игнорировать все txt
-------------
git push       - отправить на GitHub
-------------
git log -p origin/master -можно посмотреть что отправляем на GitHub
-------------

______________________________________________________________Ветки (branch) _________________________________________________________________________

git branch - посмотреть какие ветки есть и с какой веткой мы сейчас работаем
*master - по основная ветка. 
* - отмечает текущую ветку
-------------
git branch "branchName"    - создать новую ветку
git branch -D "branchName" - удалить ветку

-------------
git checkout -b "branchName" - создать ветку и сразу переключиться на неё
-------------
git checkout "branchName"  - переключиться на другую ветку
-------------
git merge "branchName" - находясь в одной ветке добавить другую 
-------------

__________________________________________________Выгрузка локального репозитория на GitHub______________________________________________________________

Чтобы связать локальный репозиторий с GitHub
После создания локального репозитория:

1.Создать репозиторий на GitHub вручную
2.На второй странице создания будут строки команд на подобе:
-----
…or push an existing repository from the command line

git remote add origin git@github.com:evgeniiIIF/Git-Test.git - скопировать адрес репозитория с GitHub и вставить в терминал находясь в локальном репозит.
git remote remove origin                                     - удалить неправильный адрес репузитория     
git branch -M main                                           - можно переименовать ветку master
git push -u origin main                                      - загрузить локальный репозиторий на GitHub
-----

________________________________________________Загрузка репозитория с GitHub ___________________________________________________________

Клонирование репозитория с GitHub
$ git clone "http://git@github.com/natenka/my_pyneng_tasks.git" - клонирование репозитория по http с гитхаб
-------
Синхронизация локального репозитория с удалённым
git pull
-------
Токен хранится в Документ Р
