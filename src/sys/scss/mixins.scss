@use "sass:math";

@import "./vars.scss";

// px to rem
//font-size: rem(20);
//in html{font-size: $mainFontSize; media(---){font-size: 15px}; media(---){font-size: 14px}...
@function rem($pixels, $context: $maxFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return math.div($pixels, $context) * 1rem;
  // @return ($pixels * $context) * 1rem;
}

// @mixin af($pcSize, $mobSize) {
// 	$addSize: $pcSize - $mobSize;
// 	$addMobSize: $addSize + $addSize * 0.7;
// 	@media (max-width: 767px) {
// 		font-size: calc(#{$mobSize + "px"} + #{$addMobSize + "px"} * ((100vw-320px) / #{$maxWidth}));
// 	}
// 	@media (min-width: 767px) {
// 		font-size: calc(#{$mobSize + "px"} + #{$addSize + "px"} * (100vw / #{$maxWidth}));
// 	}
// }

$maxWidth: 1220;
@mixin adaptiv-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $maxWidth: $maxWidth - 320;
  font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth}));
}

@mixin size-obj($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin placeholder {
  ::-webkit-input-placeholder {
    @content;
  }
  :-moz-placeholder {
    @content;
  }
  ::-moz-placeholder {
    @content;
  }
  :-ms-input-placeholder {
    @content;
  }
}
// layout helper
@mixin mr($margin) {
  & > * {
    margin-right: $margin;
    &:last-child {
      margin-right: 0;
    }
  }
}
@mixin mb($margin) {
  & > * {
    margin-bottom: $margin;
    &:last-child {
      margin-bottom: 0;
    }
  }
}

@mixin pbody($padding-top, $padding-bottom) {
  & {
    padding-top: calc($padding-top / $container * 100%);
    padding-bottom: calc($padding-bottom / $container * 100%);
  }
}

// media query
@mixin breakpoint($br) {
  @media (max-width: $br) {
    @content;
  }
}
